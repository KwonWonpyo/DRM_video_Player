swagger: '2.0'
info:
  description: ClearKey DRM + MPEG DASH Media sever
  title: ClearKey DRM media server
  version: "1.0"
host: localhost:8081
basePath: /
tags:
  - name: comment-controller
    description: Comment Controller
  - name: key-controller
    description: Key Controller
  - name: user-controller
    description: User Controller
  - name: video-controller
    description: Video Controller
paths:
  /comments/:
    post:
      tags:
        - comment-controller
      summary: writeComment
      operationId: writeCommentUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: inDto
          description: inDto
          required: true
          schema:
            $ref: '#/definitions/CommentWriteDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentAbstractDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - comment-controller
      summary: modifyComment
      operationId: modifyCommentUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: inDto
          description: inDto
          required: true
          schema:
            $ref: '#/definitions/CommentModifyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentAbstractDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comments/list:
    get:
      tags:
        - comment-controller
      summary: listAllComments
      operationId: listAllCommentsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: page
          required: true
          type: integer
          format: int32
        - name: videoId
          in: query
          description: videoId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageCommentAbstractDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comments/{commentId}:
    delete:
      tags:
        - comment-controller
      summary: deleteComment
      operationId: deleteCommentUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: commentId
          in: path
          description: commentId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentAbstractDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /keys/{videoId}:
    get:
      tags:
        - key-controller
      summary: getVideoKey
      operationId: getVideoKeyUsingGET
      produces:
        - '*/*'
      parameters:
        - name: videoId
          in: path
          description: videoId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /users/login:
    post:
      tags:
        - user-controller
      summary: login
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginDto
          description: loginDto
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /users/signup:
    post:
      tags:
        - user-controller
      summary: signUp
      operationId: signUpUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDto
          description: userDto
          required: true
          schema:
            $ref: '#/definitions/UserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /videos/:
    get:
      tags:
        - video-controller
      summary: listVideos
      operationId: listVideosUsingGET
      produces:
        - '*/*'
      parameters:
        - name: keyword
          in: query
          description: keyword
          required: false
          type: string
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: uploaderId
          in: query
          description: uploaderId
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageVideoAbstractDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - video-controller
      summary: uploadVideoFile
      operationId: uploadVideoFileUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - in: formData
          type: string
          name: title
          description: title
          required: true
        - in: formData
          type: string
          name: description
          description: description
          required: true
        - in: formData
          type: string
          name: exposure
          description: private/public
          required: true
          
        - name: thumbnail
          in: formData
          description: thumbnail
          required: true
          type: file
        - name: video
          in: formData
          description: video
          required: true
          type: file
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VideoUploadResultDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /videos/dash/{videoId}/{filename}:
    get:
      tags:
        - video-controller
      summary: getVideoWithDash
      operationId: getVideoWithDashUsingGET
      produces:
        - '*/*'
      parameters:
        - name: filename
          in: path
          description: filename
          required: true
          type: string
        - name: videoId
          in: path
          description: videoId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /videos/dash/{videoId}/{filepath}/{filename}:
    get:
      tags:
        - video-controller
      summary: getVideoWithDash
      operationId: getVideoWithDashUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: filename
          in: path
          description: filename
          required: true
          type: string
        - name: filepath
          in: path
          description: filepath
          required: true
          type: string
        - name: videoId
          in: path
          description: videoId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  AuthorityDto:
    type: object
    properties:
      authorityName:
        type: string
    title: AuthorityDto
  CommentAbstractDto:
    type: object
    properties:
      commentId:
        type: string
      content:
        type: string
      fixed:
        type: boolean
      numChildComments:
        type: integer
        format: int32
      writerId:
        type: string
      writerNickname:
        type: string
      writtenDate:
        type: string
        format: date-time
    title: CommentAbstractDto
  CommentModifyDto:
    type: object
    properties:
      commentId:
        type: string
      content:
        type: string
    title: CommentModifyDto
  CommentWriteDto:
    type: object
    properties:
      content:
        type: string
      parentCommentId:
        type: string
      videoId:
        type: string
    title: CommentWriteDto
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absoluteFile:
        $ref: '#/definitions/File'
      absolutePath:
        type: string
      canonicalFile:
        $ref: '#/definitions/File'
      canonicalPath:
        type: string
      directory:
        type: boolean
      executable:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      lastModified:
        type: integer
        format: int64
      name:
        type: string
      parent:
        type: string
      parentFile:
        $ref: '#/definitions/File'
      path:
        type: string
      readable:
        type: boolean
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
      writable:
        type: boolean
    title: File
  InputStream:
    type: object
    title: InputStream
  LoginDto:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: LoginDto
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        $ref: '#/definitions/Sort'
      unpaged:
        type: boolean
    title: Pageable
  PageCommentAbstractDto:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CommentAbstractDto'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page짬CommentAbstractDto쨩
  PageVideoAbstractDto:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/VideoAbstractDto'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page짬VideoAbstractDto쨩
  Resource:
    type: object
    properties:
      description:
        type: string
      file:
        $ref: '#/definitions/File'
      filename:
        type: string
      inputStream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        $ref: '#/definitions/URI'
      url:
        $ref: '#/definitions/URL'
    title: Resource
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort
  TokenDto:
    type: object
    properties:
      token:
        type: string
    title: TokenDto
  URI:
    type: object
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      rawAuthority:
        type: string
      rawFragment:
        type: string
      rawPath:
        type: string
      rawQuery:
        type: string
      rawSchemeSpecificPart:
        type: string
      rawUserInfo:
        type: string
      scheme:
        type: string
      schemeSpecificPart:
        type: string
      userInfo:
        type: string
    title: URI
  URL:
    type: object
    properties:
      authority:
        type: string
      content:
        type: object
      defaultPort:
        type: integer
        format: int32
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      userInfo:
        type: string
    title: URL
  UserDto:
    type: object
    properties:
      authorityDtoSet:
        type: array
        items:
          $ref: '#/definitions/AuthorityDto'
      nickname:
        type: string
      password:
        type: string
      username:
        type: string
    title: UserDto
  VideoAbstractDto:
    type: object
    properties:
      thumbnail:
        type: string
      title:
        type: string
      uploadedDate:
        type: string
        format: date-time
      uploader:
        type: string
      videoId:
        type: string
    title: VideoAbstractDto
  VideoUploadDto:
    type: object
    properties:
      description:
        type: string
      exposure:
        type: string
        enum:
          - PRIVATE
          - PUBLIC
      title:
        type: string
    title: VideoUploadDto
  VideoUploadResultDto:
    type: object
    properties:
      description:
        type: string
      exposure:
        type: string
        enum:
          - PRIVATE
          - PUBLIC
      extension:
        type: string
      title:
        type: string
      username:
        type: string
      videoId:
        type: string
    title: VideoUploadResultDto
